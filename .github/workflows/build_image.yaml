name: Build & publish sjjohn images
on:
  # push:
  #   branches: [master]
  workflow_dispatch:
    inputs:
      imgPrefix:
        description: 'Image Prefix'
        required: false
        default: 'docker.io/sjjohn'
  # release:
  #   types: [published]

# env:
#   REGISTRY: docker.io
#   IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  
      matrix:
        node-version: ['18.8.0']
        include:
          # - dockerfile: ./camboot-service/Dockerfile
          #   image: ${{ inputs.imgPrefix }}/camboot
          # - dockerfile: ./crud-service/Dockerfile
          #   image: ${{ inputs.imgPrefix }}/crud
          - dockerfile: ./gateway-service/Dockerfile
            image: ${{ inputs.imgPrefix }}/gateway
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        id: checkout-repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        id: setup-jdk
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Use Node.js ${{ matrix.node-version }}
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: '18.8.0'
          # node-version: ${{ matrix.node-version }}

      - name: Check Node and NPM versions
        run: |
          node --version
          npm --version

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install npm dependencies
        run: npm install
        working-directory: ./src/main/webui  # adjust this path

      - name: Build React app
        run: npm run build
        working-directory: ./src/main/webui  # adjust this path

      - name: Setup Maven settings.xml
        uses: s4u/maven-settings-action@v2.8.0
        with:
          servers: |
            [{
              "id": "github",
              "username": "${{ vars.SIRIUS_BUILD_GITHUB_USERNAME }}",
              "password": "${{ secrets.SIRIUS_BUILD_GITHUB_TOKEN }}"
            }]

      - name: Get changed directories
        id: changed-dirs
        run: |
          # if [ "${{ github.event_name }}" = "pull_request" ]; then
          #   CHANGED_DIRS=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep '/' | cut -d'/' -f1 | sort -u | jq -R -s -c 'split("\n")[:-1]')
          # elif [ "${{ github.event_name }}" = "push" ]; then
          #   CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '/' | cut -d'/' -f1 | sort -u | jq -R -s -c 'split("\n")[:-1]')
          # else
          #   # For workflow_dispatch, consider all directories changed
          #   CHANGED_DIRS=$(ls -d */ | jq -R -s -c 'split("\n")[:-1]')
          # fi

          CHANGED_DIRS=$(ls -d */ | jq -R -s -c 'split("\n")[:-1]')
          # CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | cut -d'/' -f1 | grep -v '^\\.' | sort -u)
          echo "dirs=$CHANGED_DIRS" >> $GITHUB_OUTPUT
          echo "Changed directories:"
          echo "$CHANGED_DIRS" | jq -r '.[]'

      - name: Build changed modules with Maven
        id: build-modules
        run: |
          CHANGED_DIRS='${{ steps.changed-dirs.outputs.dirs }}'
          if [ "$CHANGED_DIRS" != "[]" ]; then
            MODULES=$(echo $CHANGED_DIRS | jq -r '.[]' | tr '\n' ',' | sed 's/,$//')
            mvn clean package -X -DskipTests -pl $MODULES -am
          else
            echo "No modules changed. Skipping Maven build."
          fi
        env:
          GITHUB_USERNAME: ${{ vars.SIRIUS_BUILD_GITHUB_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.SIRIUS_BUILD_GITHUB_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: target/*.jar

      - name: Log in to the Container registry
        id: docker-login
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: docker-build-setup
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker images
        id: docker-build-push
        env:
          DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
        run: |
          CHANGED_DIRS='${{ steps.changed-dirs.outputs.dirs }}'
          if [ "$CHANGED_DIRS" != "[]" ]; then
            echo $CHANGED_DIRS | jq -r '.[]' | while read service; do
              if [ -f "${service}/Dockerfile" ]; then
                echo "Building and pushing image for $service"
                cp ${service}/target/*.jar ${service}/app.jar
                docker buildx build --push \
                  --tag $DOCKERHUB_USERNAME/$service:${{ github.sha }} \
                  --tag $DOCKERHUB_USERNAME/$service:latest \
                  --file ${service}/Dockerfile ${service} || exit 1
                rm ${service}/app.jar
              fi
            done
          else
            echo "No changes detected. Skipping Docker build and push."
          fi

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ${{ matrix.image }}

      # - name: Build and push Docker image for sjjohn
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     file: ${{ matrix.dockerfile }}
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

  # deploy-to-ec2-container:
  #   need: build-and-push-image
  #   runs-on: [aws-ec2]
  #   steps:
